/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;

    flavor = "balanced";
};

&sk {
    release-after-ms = <900>;
};

&sl {
    release-after-ms = <0>;
    ignore-modifiers;

    /delete-property/ quick-release;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <900>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
        };

        Enter {
            bindings = <&kp KP_ENTER>;
            key-positions = <2 3>;
        };

        Pound {
            bindings = <&kp POUND>;
            key-positions = <2 12>;
        };

        At_sign {
            bindings = <&kp AT_SIGN>;
            key-positions = <1 11>;
        };

        Dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <3 13>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        Repeat {
            bindings = <&kp C_REPEAT>;
            key-positions = <12 13>;
        };

        Backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <12 22>;
        };

        Dot {
            bindings = <&kp PERIOD>;
            key-positions = <21 11>;
        };

        Equal {
            bindings = <&kp EQUAL>;
            key-positions = <13 23>;
        };

        Copy {
            bindings = <&kp K_COPY>;
            key-positions = <21 22>;
        };

        Paste {
            bindings = <&kp K_PASTE>;
            key-positions = <22 23>;
        };

        Percent {
            bindings = <&kp PERCENT>;
            key-positions = <4 14>;
        };

        Tiled {
            bindings = <&kp TILDE>;
            key-positions = <14 24>;
        };

        Left_Backspace {
            bindings = <&kp BSPC>;
            key-positions = <7 6>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <7 8>;
        };

        Multiply {
            bindings = <&kp ASTRK>;
            key-positions = <7 17>;
        };

        Plus {
            bindings = <&kp PLUS>;
            key-positions = <6 16>;
        };

        Ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <8 18>;
        };

        Left_parentheses_hold_lesser {
            bindings = <&mt LESS_THAN LEFT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        Right_parentheses_hold_greater {
            bindings = <&mt GREATER_THAN RIGHT_PARENTHESIS>;
            key-positions = <17 18>;
        };

        Slash {
            bindings = <&kp SLASH>;
            key-positions = <17 27>;
        };

        Subtract {
            bindings = <&kp KP_SUBTRACT>;
            key-positions = <16 26>;
        };

        Pipe {
            bindings = <&kp PIPE>;
            key-positions = <18 28>;
        };

        Left_bracket_hold_Brace {
            bindings = <&mt LEFT_BRACE LEFT_BRACKET>;
            key-positions = <27 26>;
        };

        Right_Bracket_hold_Brace {
            bindings = <&mt RIGHT_BRACE RIGHT_BRACKET>;
            key-positions = <27 28>;
        };

        Catet {
            bindings = <&kp CARET>;
            key-positions = <5 15>;
        };

        Underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <15 25>;
        };

        Right_Backspace {
            bindings = <&kp BSPC>;
            key-positions = <14 13>;
        };

        Lalt {
            bindings = <&kt LALT>;
            key-positions = <20 21>;
        };

        Lshift {
            bindings = <&kt LSHFT>;
            key-positions = <10 11>;
        };

        Lctrl {
            bindings = <&kp LCTRL>;
            key-positions = <0 1>;
        };

        Ralt {
            bindings = <&kp RALT>;
            key-positions = <29 28>;
        };

        Rshift {
            bindings = <&kp RSHFT>;
            key-positions = <18 19>;
        };

        Rctrl {
            bindings = <&kp RCTRL>;
            key-positions = <8 9>;
        };

        Swap_left_to_right_RH {
            bindings = <&tog 4>;
            key-positions = <13 12 11>;
            layers = <0 4>;
        };

        Swap_left_to_right_LH {
            bindings = <&tog 4>;
            key-positions = <16 17 18>;
            layers = <0 4>;
        };

        Swap_left_to_right_LH_Nav {
            bindings = <&tog 5>;
            key-positions = <13 12 11>;
            layers = <1 5>;
        };

        Swap_left_to_right_RH_Nav {
            bindings = <&tog 5>;
            key-positions = <16 17 18>;
            layers = <1 5>;
        };
    };

    behaviors {
        Smart_Num: Smart_Num {
            compatible = "zmk,behavior-hold-tap";
            label = "SMART_NUM";
            bindings = <&mo>, <&Num_dance>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <900>;
        };
        Smart_shift: Smart_shift_ {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_SHIFT ";
            bindings = <&sk LSHFT>, <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        Num_dance: Num_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "NUM_DANCE";
            #binding-cells = <0>;
            bindings = <&sl 3>;
        };
        Hml: Hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
        Hmr: Hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W            &kp E         &kp R              &kp T    &kp Y  &kp U                  &kp I                &kp O             &kp P
&Hml LGUI A  &Hml LEFT_ALT S  &Hml LCTRL D  &Hml LEFT_SHIFT F  &kp G    &kp H  &Hmr RIGHT_SHIFT J     &Hmr RCTRL K         &Hmr RIGHT_ALT L  &Hmr RGUI N
&kp Z        &kp X            &kp C         &kp V              &kp B    &kp M  &mt DOUBLE_QUOTES SQT  &mt SEMICOLON COMMA  &mt COLON PERIOD  &mt EXCLAMATION QUESTION
&tog 1       &lt 2 SPACE                                                                                                   &Smart_Num 3 0    &Smart_shift
            >;
        };

        Nav {
            bindings = <
&mt HOME INS         &kp KP_N7            &kp KP_N8         &kp KP_N9              &kp PAGE_UP      &kp PAGE_UP    &kp BSPC                     &kp UP_ARROW           &kp DEL                     &none
&Hml LEFT_GUI KP_N0  &Hml LEFT_ALT KP_N4  &Hml LCTRL KP_N5  &Hml LEFT_SHIFT KP_N6  &kp ENTER        &kp PAGE_DOWN  &Hmr RIGHT_SHIFT LEFT_ARROW  &Hmr RCTRL DOWN_ARROW  &Hmr RIGHT_ALT RIGHT_ARROW  &Hmr RIGHT_GUI ENTER
&mt END DELETE       &kp KP_N1            &kp KP_N2         &kp KP_N3              &kp PAGE_DOWN    &kp INS        &kp TAB                      &kp LESS_THAN          &kp GREATER_THAN            &none
&trans               &trans                                                                                                                                            &none                       &kp K_CANCEL
            >;
        };

        tri_layer {
            bindings = <
&kp F12        &kp F7        &kp F8         &kp F9         &none    &bl BL_TOG  &kp C_PREV                 &kp C_VOL_UP              &kp C_NEXT          &none
&Hml LGUI F11  &Hml LALT F4  &Hml LCTRL F5  &Hml LSHFT F6  &none    &bl BL_INC  &Hmr RSHFT C_FAST_FORWARD  &Hmr RCTRL C_VOLUME_DOWN  &Hmr RALT C_REWIND  &Hmr RGUI K_MUTE
&kp F10        &kp F1        &kp F2         &kp F3         &none    &bl BL_DEC  &bt BT_CLR                 &bt BT_NXT                &bt BT_PRV          &none
&trans         &trans                                                                                                                &kp C_MUTE          &kp C_PP
            >;
        };

        Smart_Num {
            bindings = <
&trans  &kp N7  &kp N8  &kp N9  &trans    &trans  &trans  &trans  &trans  &trans
&kp N0  &kp N4  &kp N5  &kp N6  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &kp N1  &kp N2  &kp N3  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans                                                    &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&kp P             &kp O             &kp I         &kp U               &kp Y    &kp T  &kp R              &kp E         &kp W            &kp Q
&Hmr RIGHT_GUI N  &Hmr RIGHT_ALT L  &Hmr RCTRL K  &Hmr RIGHT_SHIFT J  &kp H    &kp G  &Hml LEFT_SHIFT F  &Hml LCTRL D  &Hml LEFT_ALT S  &Hml LEFT_GUI A
&kp BSLH          &kp DOT           &kp COMMA     &kp APOS            &kp M    &kp B  &kp V              &kp C         &kp X            &kp Z
&Smart_shift      &Smart_Num 3 0                                                                                       &lt 2 SPACE      &tog 1
            >;
        };

        layer_5 {
            bindings = <
&none                 &kp BSPC                   &kp UP_ARROW           &kp DEL                      &kp PG_UP    &kp PG_UP  &kp KP_N9              &kp KP_N8         &kp KP_N7            &mt HOME INS
&Hmr RIGHT_GUI ENTER  &Hmr RIGHT_ALT LEFT_ARROW  &Hmr RCTRL DOWN_ARROW  &Hmr LEFT_SHIFT RIGHT_ARROW  &kp PG_DN    &kp ENTER  &Hml LEFT_SHIFT KP_N6  &Hml LCTRL KP_N5  &Hml LEFT_ALT KP_N4  &Hml LEFT_GUI KP_N0
&none                 &kp LESS_THAN              &kp GREATER_THAN       &kp TAB                      &kp INS      &kp PG_DN  &kp KP_N7              &kp KP_N2         &kp KP_N1            &mt END DELETE
&kp K_CANCEL          &none                                                                                                                                           &trans               &trans
            >;
        };
    };
};
